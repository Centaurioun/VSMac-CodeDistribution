
// This file has been generated by the GUI designer. Do not modify.
namespace CodeDistribution.Pad
{
	public partial class PreferencesWidget
	{
		private global::Gtk.VBox vbox1;

		private global::Gtk.Label label1;

		private global::Gtk.Entry IncludeEntry;

		private global::Gtk.Label label11;

		private global::Gtk.Entry ExcludeEntry;

		private global::Gtk.Label label13;

		private global::Gtk.Entry ExcludeDirectoriesEntry;

		private global::Gtk.Frame frame1;

		private global::Gtk.Alignment ProjectsNodeFrame;

		private global::Gtk.Label GtkLabel1;

		private global::Gtk.HBox hbox3;

		private global::Gtk.Button InfoButton;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget CodeDistribution.Pad.PreferencesWidget
			global::Stetic.BinContainer.Attach(this);
			this.Name = "CodeDistribution.Pad.PreferencesWidget";
			// Container child CodeDistribution.Pad.PreferencesWidget.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox();
			this.vbox1.Name = "vbox1";
			// Container child vbox1.Gtk.Box+BoxChild
			this.label1 = new global::Gtk.Label();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Include Extensions</b>");
			this.label1.UseMarkup = true;
			this.vbox1.Add(this.label1);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.label1]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.IncludeEntry = new global::Gtk.Entry();
			this.IncludeEntry.Sensitive = false;
			this.IncludeEntry.CanFocus = true;
			this.IncludeEntry.Name = "IncludeEntry";
			this.IncludeEntry.IsEditable = true;
			this.IncludeEntry.InvisibleChar = '●';
			this.vbox1.Add(this.IncludeEntry);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.IncludeEntry]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.label11 = new global::Gtk.Label();
			this.label11.Name = "label11";
			this.label11.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Exclude Extensions</b>");
			this.label11.UseMarkup = true;
			this.vbox1.Add(this.label11);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.label11]));
			w3.Position = 2;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.ExcludeEntry = new global::Gtk.Entry();
			this.ExcludeEntry.Sensitive = false;
			this.ExcludeEntry.CanFocus = true;
			this.ExcludeEntry.Name = "ExcludeEntry";
			this.ExcludeEntry.IsEditable = true;
			this.ExcludeEntry.InvisibleChar = '●';
			this.vbox1.Add(this.ExcludeEntry);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.ExcludeEntry]));
			w4.Position = 3;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.label13 = new global::Gtk.Label();
			this.label13.Name = "label13";
			this.label13.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Exclude Directories</b>");
			this.label13.UseMarkup = true;
			this.vbox1.Add(this.label13);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.label13]));
			w5.Position = 4;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.ExcludeDirectoriesEntry = new global::Gtk.Entry();
			this.ExcludeDirectoriesEntry.Sensitive = false;
			this.ExcludeDirectoriesEntry.CanFocus = true;
			this.ExcludeDirectoriesEntry.Name = "ExcludeDirectoriesEntry";
			this.ExcludeDirectoriesEntry.IsEditable = true;
			this.ExcludeDirectoriesEntry.InvisibleChar = '●';
			this.vbox1.Add(this.ExcludeDirectoriesEntry);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.ExcludeDirectoriesEntry]));
			w6.Position = 5;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.frame1 = new global::Gtk.Frame();
			this.frame1.Name = "frame1";
			this.frame1.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame1.Gtk.Container+ContainerChild
			this.ProjectsNodeFrame = new global::Gtk.Alignment(0F, 0F, 1F, 1F);
			this.ProjectsNodeFrame.Name = "ProjectsNodeFrame";
			this.ProjectsNodeFrame.LeftPadding = ((uint)(5));
			this.frame1.Add(this.ProjectsNodeFrame);
			this.GtkLabel1 = new global::Gtk.Label();
			this.GtkLabel1.Name = "GtkLabel1";
			this.GtkLabel1.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Projects</b>");
			this.GtkLabel1.UseMarkup = true;
			this.frame1.LabelWidget = this.GtkLabel1;
			this.vbox1.Add(this.frame1);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.frame1]));
			w8.Position = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox3 = new global::Gtk.HBox();
			this.hbox3.Name = "hbox3";
			this.hbox3.Spacing = 6;
			// Container child hbox3.Gtk.Box+BoxChild
			this.InfoButton = new global::Gtk.Button();
			this.InfoButton.CanFocus = true;
			this.InfoButton.Name = "InfoButton";
			this.InfoButton.UseUnderline = true;
			global::Gtk.Image w9 = new global::Gtk.Image();
			w9.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-dialog-info", global::Gtk.IconSize.Menu);
			this.InfoButton.Image = w9;
			this.hbox3.Add(this.InfoButton);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.InfoButton]));
			w10.PackType = ((global::Gtk.PackType)(1));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			w10.Padding = ((uint)(1));
			this.vbox1.Add(this.hbox3);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.hbox3]));
			w11.PackType = ((global::Gtk.PackType)(1));
			w11.Position = 7;
			w11.Expand = false;
			w11.Fill = false;
			this.Add(this.vbox1);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
			this.IncludeEntry.FocusOutEvent += new global::Gtk.FocusOutEventHandler(this.HandleEntryUnfocused);
			this.ExcludeEntry.FocusOutEvent += new global::Gtk.FocusOutEventHandler(this.HandleEntryUnfocused);
			this.ExcludeDirectoriesEntry.FocusOutEvent += new global::Gtk.FocusOutEventHandler(this.HandleEntryUnfocused);
			this.InfoButton.Clicked += new global::System.EventHandler(this.HandleInfoButtonClicked);
		}
	}
}
